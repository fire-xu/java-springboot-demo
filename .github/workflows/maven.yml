# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: [self-hosted]

    steps:
    - name: Clone Gogs  
      run:   |
           git clone ${{ secrets.GOGS_REPO }}
    - name: Build with Maven
      env: 
          JAVA_HOME: /usr/local/bin/actions-runner/_work/_tool/jdk/8.0.282/x64
          MAVEN_HOME: /usr/local/bin/maven/bin/mvn
      run:  |
           ls -l
           pwd 
           cd test-demo
           sed -i "s/<BUILD_TAG>/$GITHUB_RUN_NUMBER/" k8s.yaml
           cat k8s.yaml
           /usr/local/bin/maven/bin/mvn -B clean package --file pom.xml -Dmaven.test.skip=true
    - name :  Build with sonar
      run :  |
            cd test-demo 
            /usr/local/bin/maven/bin/mvn sonar:sonar -Dsonar.host.url=${{ secrets.SONAR_ADD }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}
    - name : Build and push docker images
      run :  |
            ls -l
            cd test-demo
            docker login --username=${{ secrets.DOCKER_NAME }} --password ${{ secrets.DOCKER_PASS }}
            docker build . -t ${{ secrets.REGISTRY}}:$GITHUB_RUN_NUMBER
            docker push ${{ secrets.REGISTRY}}:$GITHUB_RUN_NUMBER
    - name : Deploy project with k8s
      run :  |
              ls -l
              cd test-demo               
              kubectl apply -f k8s.yaml --record 
              kubectl apply -f ingress.yaml --record
    - name : cleanup
      if  : ${{ always() }}
      run :  |
              pwd
              ls -l
              rm -rf test-demo 
